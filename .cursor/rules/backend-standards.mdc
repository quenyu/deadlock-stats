# Backend Development Standards

## Clean Architecture Guidelines
- Follow strict layer separation:
  1. Handlers (HTTP/Transport layer)
  2. Services (Business logic)
  3. Repositories (Data access)
- Dependencies flow inward
- Inner layers must not depend on outer layers
- Use interfaces for dependency injection

## Go Best Practices
- Follow Go naming conventions
- Use meaningful variable names
- Implement proper error handling
- Use context for timeouts and cancellation
- Implement proper logging

## Database
- Use prepared statements
- Implement proper transaction handling
- Use connection pooling
- Implement proper indexing
- Cache frequently accessed data in Redis

## API Design
- Use RESTful principles
- Implement proper versioning
- Use proper HTTP methods and status codes
- Implement proper validation
- Document APIs using OpenAPI/Swagger

## Security
- Implement proper JWT handling
- Use secure password hashing
- Implement rate limiting
- Use HTTPS
- Implement proper CORS policies

## Performance
- Implement proper caching strategies
- Use connection pooling
- Optimize database queries
- Implement proper timeouts
- Use proper logging levels
description:
globs:
alwaysApply: false
---
 